
exec --no-startup-id xfsettingsd
set $mod Mod1
for_window [class="^.*"] border pixel 1
font pango:freemono 13
# class                 border  bground text    indicator child_border
client.focused          #4F4F4F #777777 #FFFFFF #000000   #878787
client.focused_inactive #333333 #4C4C4C #FFFFFF #484E50   #5F676A
client.unfocused        #333333 #222222 #888888 #292D2E   #222222
client.urgent           #2F343A #900000 #FFFFFF #900000   #900000
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #FFFFFF


bindsym $mod+Return exec kitty
exec_always /usr/lib/mate-polkit/polkit-mate-authentication-agent-1
bindsym $mod+Shift+c kill
bindsym $mod+a exec thunar
bindsym $mod+w exec firefox
bindsym $mod+d exec --no-startup-id rofi -show drun -icon-theme "Tela-circle" -show-icons

bindsym $mod+Shift+d exec --no-startup-id rofi -show run
bindsym $mod+Shift+b exec --no-startup-id picom-toggle
gaps inner 20

exec_always picom -f


exec --no-startup-id xss-lock --transfer-sleep-lock -- betterlockscreen -l

exec --no-startup-id nm-applet


#Volume Control in ALG i3
bindsym XF86AudioRaiseVolume exec amixer -q set Master 5%+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 5%- unmute
bindsym XF86AudioMute exec amixer -q set Master toggle

##Brightness Control in ALG i3
bindsym XF86MonBrightnessUp exec sudo xbacklight -inc 10
bindsym XF86MonBrightnessDown exec sudo xbacklight -dec 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod



bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# 1B] alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# 2A] move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# 2B] alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# 3] split in horizontal orientation
bindsym $mod+h split h

# 4] split in vertical orientation
bindsym $mod+v split v

bindsym $mod+e split toggle

# 5] enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# 7] toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# 8] change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# 9A] focus the parent container
#bindsym $mod+a focus parent

# 9B] focus the child container
#bindsym $your_keybinding focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10"

# 10] switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# 11] move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

bindsym $mod+Shift+p reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# 13A] resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


# 13B] Enter Resize Mode
bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available). Commented out due to use of polyrar. If you want to
# use i3 bars (status or blocks) this are some examples on how you can do it.
# bar {
        #status_command i3status
        #tray_output primary
        #status_command i3status -c ~/.config/i3/i3status.conf
        #status_command i3blocks -c ~/.config/i3/i3blocks.conf
#}


# Launch a program on a certain workspace, from rofi (which may or may not have a keybinding)
# for_window [class="nameofapp"] move to workspace $wsno.
# WS No. 5 has been used as example.
# Note: You will have to launch the program from a program launcher (rofi).
for_window [class="firefox"] move to workspace $ws2
for_window [class="Discord"] move to workspace $ws3
# The following way allows programs to be launched with a
# defined keybinding, on a certain workspace, without
# touching program launcher. Assign Programs to respective
# workspaces.
bindsym $mod+b workspace 5; exec firefox


#Multi Monitor (Dual Monitor, extended monitor)
#Replace HDMI2 with DVI-2, VGA-2, DP-2, DVI-2 etc. Get value by typing xrandr in the terminal.
#If X is a natural number, then;
#eDP-X is the display used in Laptops.
#HDMI-X is display used in Desktop connected to monitor with HDMI Cable.
#VGA-X is display used in Desktop connected to monitor with VGA Cable.
exec --no-startup-id /usr/lib/mate-polkit/polkit-mate-authentication-agent-1

bar {
  colors {
	    background #000000
			    statusline #FFFFFF
					    separator  #666666

							    focused_workspace  #585858 #777777 #FFFFFF
									    active_workspace   #333333 #222222 #FFFFFF
											    inactive_workspace #333333 #222222 #888888
													    urgent_workspace   #2F343A #900000 #FFFFFF
															    binding_mode       #2F343A #900000 #FFFFFF
																	  }
position top
	status_command bumblebee-status -m cmus dunst memory time \
		amixer pasource -p time.format="%H:%M:%S" cmus.format={file1} -t greyish-powerline

}
#execution

exec nitrogen --restore
#exec_always flameshot
exec_always --no-startup-id nitrogen --restore
